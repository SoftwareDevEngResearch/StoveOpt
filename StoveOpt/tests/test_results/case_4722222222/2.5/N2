/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "2.5";
    object      N2;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
297
(
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0.472661
0.404961
0.467635
0
0
0
0.931671
0.915115
0.843217
0.833877
0.838189
0.79366
0.935874
0.92196
0.857351
1
0.999992
0.979303
0.92028
0.872243
0.891951
1
0.999994
0.992107
1
1
1
0.948411
0.974802
0.924735
1
1
1
1
1
1
1
1
1
0.999984
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0.992183
0.999999
0.968966
1
1
1
1
1
1
1
1
0.989511
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
)
;

boundaryField
{
    fuel
    {
        type            fixedValue;
        value           uniform 0;
    }
    primary_air
    {
        type            fixedValue;
        value           uniform 0.77;
    }
    Secondary_air_RHS
    {
        type            fixedValue;
        value           uniform 0.77;
    }
    Secondary_air_LHS
    {
        type            fixedValue;
        value           uniform 0.77;
    }
    outlet
    {
        type            inletOutlet;
        inletValue      uniform 0;
        value           uniform 1;
    }
    stove_body
    {
        type            fixedValue;
        value           uniform 0;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
